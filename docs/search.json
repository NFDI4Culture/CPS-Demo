[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Die barocken Schloss- und Gartenveduten",
    "section": "",
    "text": "Katalog zur Ausstellung: Die barocken Schloss- und Gartenveduten\nEin Katalog mit Kunstwerken aus der CbDD-Sammlung. Textteil: 6e73f774-4b7f-4e37-937b-e11cc35c5bc8\nDie barocken Schloss- und Gartenveduten [Sammlung]\n This work is licensed under a Creative Commons Attribution-NonCommercial-NoDerivs 4.0 International License.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Katalog zur Ausstellung: Die barocken Schloss- und Gartenveduten</span>"
    ]
  },
  {
    "objectID": "section.html",
    "href": "section.html",
    "title": "Die barocken Schloss- und Gartenveduten",
    "section": "",
    "text": "Code\nfrom datetime import datetime\nimport sys\nimport time\nfrom SPARQLWrapper import SPARQLWrapper, JSON\nimport requests\nfrom PIL import Image\nimport html\n\nendpoint_url = \"https://computational-publishing-service.wikibase.cloud/query/sparql\"\n\nquery_txt = \"\"\"PREFIX cps: &lt;https://computational-publishing-service.wikibase.cloud/entity/&gt;\nPREFIX cpss: &lt;https://computational-publishing-service.wikibase.cloud/entity/statement/&gt;\nPREFIX cpsv: &lt;https://computational-publishing-service.wikibase.cloud/value/&gt;\nPREFIX cpspt: &lt;https://computational-publishing-service.wikibase.cloud/prop/direct/&gt;\nPREFIX cpsp: &lt;https://computational-publishing-service.wikibase.cloud/prop/&gt;\nPREFIX cpsps: &lt;https://computational-publishing-service.wikibase.cloud/prop/statement/&gt;\nPREFIX cpspq: &lt;https://computational-publishing-service.wikibase.cloud/prop/qualifier/&gt;\n\nSELECT ?textItem ?kuratorLabel ?textUrl\nWHERE\n{\n  &lt;placeholder&gt;\n  ?textItem cpsp:P46 ?kuratorStatement. \n  ?kuratorStatement cpsps:P46 ?kuratorItem. \n  ?kuratorItem rdfs:label ?kuratorLabel.\n  ?textItem cpsp:P57 ?urlstatement. \n  ?urlstatement cpsps:P57 ?textUrl. \n}\"\"\"\n\nquery_img = \"\"\"PREFIX cps: &lt;https://computational-publishing-service.wikibase.cloud/entity/&gt;\nPREFIX cpss: &lt;https://computational-publishing-service.wikibase.cloud/entity/statement/&gt;\nPREFIX cpsv: &lt;https://computational-publishing-service.wikibase.cloud/value/&gt;\nPREFIX cpspt: &lt;https://computational-publishing-service.wikibase.cloud/prop/direct/&gt;\nPREFIX cpsp: &lt;https://computational-publishing-service.wikibase.cloud/prop/&gt;\nPREFIX cpsps: &lt;https://computational-publishing-service.wikibase.cloud/prop/statement/&gt;\nPREFIX cpspq: &lt;https://computational-publishing-service.wikibase.cloud/prop/qualifier/&gt;\n\nSELECT DISTINCT ?itemLabel ?itemDescr ?imgItem ?imgUrl ?publishDate \nWHERE\n{\n  ?imgItem cpsp:P107 ?urlStatement. \n  ?urlStatement cpsps:P107 ?imgUrl. \n  ?imgItem cpsp:P60 ?dateStatement. \n  ?dateStatement cpsps:P60 ?publishDate.\n  ?imgItem cpsp:P6 ?partOfStatement.\n  ?partOfStatement cpsps:P6 ?partOfItem.\n  &lt;placeholder&gt; \n  SERVICE wikibase:label {\n      bd:serviceParam wikibase:language \"de,en\".\n      ?imgItem rdfs:label ?itemLabel.\n      ?imgItem schema:description ?itemDescr.\n    }\n}\"\"\"\nquery_graph = \"\"\"PREFIX cps: &lt;https://computational-publishing-service.wikibase.cloud/entity/&gt;\nPREFIX cpss: &lt;https://computational-publishing-service.wikibase.cloud/entity/statement/&gt;\nPREFIX cpsv: &lt;https://computational-publishing-service.wikibase.cloud/value/&gt;\nPREFIX cpspt: &lt;https://computational-publishing-service.wikibase.cloud/prop/direct/&gt;\nPREFIX cpsp: &lt;https://computational-publishing-service.wikibase.cloud/prop/&gt;\nPREFIX cpsps: &lt;https://computational-publishing-service.wikibase.cloud/prop/statement/&gt;\nPREFIX cpspq: &lt;https://computational-publishing-service.wikibase.cloud/prop/qualifier/&gt;\n\nSELECT ?x ?y\nWHERE\n{\n  ?a cpsp:P2 ?c.\n  ?c cpsps:P2 ?d.\n  ?a rdfs:label ?x.\n  ?d rdfs:label ?y.\n\n}LIMIT 1\"\"\"\n\nquery_graph2 = \"\"\"\nSELECT ?a ?b ?c\nWHERE\n{\n  ?a rdfs:label ?c\n}LIMIT 100\"\"\"\n\n\ndef run_query(endpoint_url, query):\n    user_agent = \"WDQS-example Python/%s.%s\" % (sys.version_info[0], sys.version_info[1])\n    # TODO adjust user agent; see https://w.wiki/CX6\n    sparql = SPARQLWrapper(endpoint_url, agent=user_agent)\n    sparql.setQuery(query)\n    sparql.setMethod(\"POST\") #this NEEDS to be added to get results (not included in the wikibase python example code)\n    sparql.setReturnFormat(JSON)\n    return sparql.query().convert()\n\ndef get_text(textitem_id):\n    q = \"\"\n    if textitem_id:\n        q = query_txt.replace(\"&lt;placeholder&gt;\", \"cps:\"+textitem_id+\" cpsp:P46 ?kuratorStatement.\")\n    else:\n        q = query_txt.replace(\"&lt;placeholder&gt;\",\"\")\n\n    results_txt = run_query(endpoint_url, q)\n    for item in results_txt[\"results\"][\"bindings\"]:\n        # print(item)\n        print('Wikibase link: ' + '[' + item['textItem']['value'] + ']' + '(' + item['textItem']['value'] + ')' + '\\n')\n        print('Kurator: ' + item['kuratorLabel']['value'] + '\\n')\n        headers = {'User-Agent': 'Ex_Books_conference_bot/0.0 (https://github.com/SimonXIX/Experimental_Books_workshop; ad7588@coventry.ac.uk)'}\n        r = requests.get(item['textUrl']['value'], headers=headers, stream=True)\n        text = str(r.content)\n        text = text.replace(\"ä\",\"&auml;\")\n        text = text.replace(\"Ä\",\"&Auml;\")\n        text = text.replace(\"ö\",\"&ouml;\")\n        text = text.replace(\"Ö\",\"&Ouml;\")\n        text = text.replace(\"ü\",\"&uuml;\")\n        text = text.replace(\"Ü\",\"&Uuml;\")\n        text = text.replace(\"ß\",\"&szlig;\")\n        text = text.replace('\\\\n',\"&lt;br&gt;\")\n        text = str(text)\n        text = text.removeprefix(\"b'&lt;!DOCTYPE html&gt;\").removesuffix(\"'\")\n        print(text)\n\ndef get_delay(date):\n    try:\n        date = datetime.datetime.strptime(date, '%a, %d %b %Y %H:%M:%S GMT')\n        timeout = int((date - datetime.datetime.now()).total_seconds())\n    except ValueError:\n        timeout = int(date)\n    return timeout\n\ndef fetch_image_by_url(url, headers):\n    r = requests.get(url, headers=headers, stream=True)\n    if r.status_code == 200:\n        im = Image.open(r.raw)\n        return im\n    if r.status_code == 500:\n        return None\n    if r.status_code == 403:\n        return None\n    if r.status_code == 429:\n        timeout = get_delay(r.headers['retry-after'])\n        print('Timeout {} m {} s'.format(timeout // 60, timeout % 60))\n        time.sleep(timeout)\n        fetch_image_by_url(url, headers)\n\ndef get_img(partOfItem_id):\n    q = \"\"\n    if partOfItem_id:\n        q = query_img.replace(\"&lt;placeholder&gt;\", \"?partOfStatement cpsps:P6 cps:\"+partOfItem_id+\".\")\n    else:\n        q = query_img.replace(\"&lt;placeholder&gt;\",\"\")\n    results_img = run_query(endpoint_url, q)\n    for item in results_img[\"results\"][\"bindings\"]:    \n      #print(item)\n      print('Wikibase link: ' + '[' + item['imgItem']['value'] + ']' + '(' + item['imgItem']['value'] + ')' + '\\n')\n      print('Title: ' + item['itemLabel']['value'] + '\\n')\n      print('Year: ' + item['publishDate']['value'] + '\\n')\n      print('Description: ' + html.unescape(item['itemDescr']['value']) + '\\n')\n\n      # get image from image URL and display resized version\n      image_url=item['imgUrl']['value']\n      headers = {'User-Agent': 'Ex_Books_conference_bot/0.0 (https://github.com/SimonXIX/Experimental_Books_workshop; ad7588@coventry.ac.uk)'}\n      im = fetch_image_by_url(image_url, headers)\n      im.thumbnail((500, 500), Image.Resampling.LANCZOS)\n      display(im)\n      print('\\n\\n')\n\ndef get_graph():\n    import VizKG.visualize as vkg\n    results_graph1 = run_query(endpoint_url, query_graph)\n    #print(results_graph1)\n    #print('---')\n    results_graph2 = run_query(endpoint_url, query_graph2)\n    #print(results_graph2)\n\n    chart = vkg(sparql_query=query_graph2, sparql_service_url=endpoint_url, chart='wordcloud')\n    chart.plot()\n\nHow to use your own text for processing\n\nAdd a new Text item to the wikibase. link to wikibase new item the item should contain the following statements:\n\n\nP57 (external link): link to the html file containing the new text\nP46 (kurator): Item of the curator. you may use an existing item like Q210 (Ulrike seeger) for test purposes\nP53 (license): Item of a license for the text. e.g Q203 (CC BY-NC-ND 4.0 DEED )\nP6 (is part of): set value to Q218 (Schlossanlage Weikersheim)\n\n\ncheck if your new text item occurs in the list of selected text items: Link to wikibase query service\nset parameter of get_text() to the id of your new text item e.g.: get_text(“Q209”)\n\n\nCode\nget_text(\"Q282\")\n\nWikibase link: https://computational-publishing-service.wikibase.cloud/entity/Q282\nKurator: Seeger, Ulrike\nbr&gt;br&gt;\n\nbr&gt;\n\nbr&gt;\n\nbr&gt;\n\nbr&gt;\n\nbr&gt;\n\nbr&gt;br&gt;\n\nbr&gt;\n\nDie barocken Schloss- und Gartenveduten\n\nbr&gt;ntstehungs- und Erhaltungsgeschichte\n\nbr&gt;weitere Bereicherung erfuhr die Saalausstattung des Barock im Rechnungsjahr 1715/16 durch die ringsumlaufenden Lambris von Christian Thalwitzer.[1] 51 l4ngsrechteckige Felder wurden mit Gem4lden nach zeitgen6ssischen Schloss- und Gartenveduten versehen. In den Fensterlaibungen nahmen 27 hochrechteckige Felder Abbildungen von Orangenb4umen und anderen exotischen Kauf. Die Ansicht des Carlsbergs bei Weikersheim, die erst 1747 im Zusammenhang mit der damals aufgestellten Kunstuhr hinzukam, deine 4ltere Vedute ersetzt haben, die sich am Fensterpfeiler hinter der Uhr noch befinden k6nnte.br&gt;br&gt;br&gt;strong&gt;Beschreibung und Ikonographiebr&gt;Veduten, deren Vorlagen durchgehend zu benennen sind, wurden am oberen Rahmen mit einem Spruchband beschriftet. Sie lassen sich also leicht zuordnen.[2] Indem die erl4uternden Beischriften direkt von den graphischen Vorlagen wurden, fsie die Tradition der Deckengem4lde Balthasar Katzenbergers aus der Renaissance weiter. Der Schwerpunkt der Veduten lag auf Frankreich, von wo 30 Ansichten vornehmlich nach P9relle wurden. Au9fer Geb4uden und G4rten in Paris und Versailles waren die Landschl6sser Richelieu, Liancourt, St. Cloud, St.-Germain-en-Laye, Chantilly, Clagny und Vaux-le-Vicomte vertreten sowie von Paris die Stadttore Porte St. Antoine, Porte St. Denis und Arc de triomphe. Die Ansicht des Marktplatzes von Naxos geh6rte insofern zu den franz6sischen Veduten, als sie das in Paris von Aveline gestochene BGiacomo Torellis einer in Venedig aufgefOper wiedergab.[3]br&gt;br&gt;br&gt;sechs Veduten bezogen sich auf reichsfAnlagen. Salzdahlum des Herzogs Anton Ulrich von Braunschweig-Wolfenbwar mit Hof- und Gartenseite zu sehen. Schloss Philippsruhe bei Hanau-Kesselstadt am Main wurde nach der 1705 erschienenen Ansicht abgebildet.[4]Drei Vogelschauen von Schloss Ludwigsburg Herzog Eberhard Ludwigs von Wentstammen dem 1711 erschienenen Stichwerk von Johann Friedrich Nette.[5] Hinzu kamen eine Ansicht von Weikersheim mit Lustgarten und des nahegelegenen Lustgartens in Sch4ftersheim. Beide Anlagen lagen nicht als Stiche vor, wurden aber dennoch in dieser Art abgebildet. Holl4ndische Stiche wurden in den Zyklus nicht einbezogen.br&gt;br&gt;br&gt;steigerte die Lesbarkeit der Veduten, indem er sie in Farbe malte und in ihrem Formenreichtum vereinfachte. Au9ferdem reduzierte er das bei P9relle und seinen Nachfolgern stets gro9fe Aufgebot an Staffagefiguren. Gr9feren Wert als P9relle legte er hingegen auf Stadtsilhouetten oder auch Berge im Hintergrund. Vereinheitlichend wirkte sein gleichm9figes Himmelsblau mit waagrecht bildparallel dahinziehenden Wolken. Es fand sich in der gleichen Art, jedoch tiefliegendem Horizont auf den Veduten der exotischen K4chse.br&gt;br&gt;br&gt;strong&gt;Anordnungbr&gt;gewisse Ordnung l4sst sich lediglich an der Westwand erkennen, wo die Veduten zu beiden Seiten des Kamins symmetrisch beginnen. Flankiert wird der Kamin von zwei Gartenansichten von Versailles, an die sich je eine Ansicht von Paris und als erste Vedute der L4ngsseite die Ansicht eines Landschlosses (Salzdahlum und Liancourt) anschlie9fen. Ansonsten regiert das Prinzip der Vielfalt, indem beispielsweise die Serie der Pariser Stadttore die gesamten Lambris verteilt ist.br&gt;br&gt;br&gt;strong&gt;Erhaltungszustand\n\nbr&gt;alle Lambrisgem4lde Christian Thalwitzers wurden auch die Schloss- und Gartenveduten des Rittersaals nach 1945 von Prinz Constantin restaurierend .[6]br&gt;br&gt;br&gt;1] Die Datierung verdankt die Autorin einer Mitteilung von Dinah Rottsch4fer.br&gt;2] Die Sujets aufgefbei Merten, Weikersheim, o. J., S. 45. Eine der als 9eungekl4rt9c bezeichneten Veduten stellt Schloss Richelieu dar.[3] Die Legende des Stichs von Aveline nach Torelli lautet: 9e La Grande place de la Ville de Naxos, qui est une decoration du second Acte de l99Opera de VENUS IALOUSE [= Venere Gelosa] represent Venise. Invent par Jacques Torellj de Fano en Italie et Grav par Aveline a Paris .br&gt;4] https://www.lagis-hessen.de/de/subjects/idrec/sn/oa/id/1708 9eAnsicht von Schloss Philippsruhe, 17059c, in: Historische Ortsansichten &lt;https://www.lagis-hessen.de/de/subjects/idrec/sn/oa/id/1708&gt; (Stand: 23.1.2017)br&gt;5] http://digital.wlb-stuttgart.de/sammlungen/sammlungsliste/werksansicht/?no_cache=1&tx_dlf%5Bid%5D=2885&tx_dlf%5Bpage%5D=1br&gt;6] Wiese, F, 2019, S. 424.br&gt;\n\nbr&gt;br&gt;\n\nbr&gt;\n\nHow to select images for processing\nImages are selected via the sparql query. The method get_img() is capable of using a wikibase item id as parameter to select images with the property P6 (is part of) linking to the given item id.\n\nselect a valid location id from the query result: Link to wikibase query service\nset parameter of get_img() to the id of your selected location item e.g.: get_img(“Q217”)\n\n\nCode\nget_img(\"Q208\")\n\nWikibase link: https://computational-publishing-service.wikibase.cloud/entity/Q283\nTitle: Die barocken Schloss- und Gartenveduten bild\nYear: 2018\nDescription: Bild für Die barocken Schloss- und Gartenveduten\nWikibase link: https://computational-publishing-service.wikibase.cloud/entity/Q283\nTitle: Die barocken Schloss- und Gartenveduten bild\nYear: 2018-01-01T00:00:00Z\nDescription: Bild für Die barocken Schloss- und Gartenveduten\n \n\n\nCode\nget_graph()",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Die barocken Schloss- und Gartenveduten</span>"
    ]
  }
]